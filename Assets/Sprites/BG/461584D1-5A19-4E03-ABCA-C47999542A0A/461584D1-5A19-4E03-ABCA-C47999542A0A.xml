<Invoice xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:ccts="urn:un:unece:uncefact:documentation:2" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:qdt="urn:oasis:names:specification:ubl:schema:xsd:QualifiedDatatypes-2" xmlns:ubltr="urn:oasis:names:specification:ubl:schema:xsd:TurkishCustomizationExtensionComponents" xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2" xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2 UBL-Invoice-2.1.xsd"><ext:UBLExtensions><ext:UBLExtension><ext:ExtensionContent><ds:Signature Id="Signature_IN32023000170737">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"/>
<ds:Reference Id="Reference-Id-9728785a-15b0-4f41-90ba-cd9c9f338147" Type="http://uri.etsi.org/01903#SignedProperties" URI="#Signed-Properties-Id-af7e1682-b3d3-4974-a3b8-b26ee6f3cefb">
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
<ds:DigestValue>jsgV1pnaESvRdIgu3iSxziGPZZgvHzb67n6qOdALSU8=</ds:DigestValue>
</ds:Reference>
<ds:Reference Id="Reference-Id-b677767b-4d37-4f05-8014-453bf2ef54ef" URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
<ds:DigestValue>qhxNJNIG10WpvKL33XH5UYPdOo6VD2d3CCFr46q/aKo=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue Id="Signature-Value-Id-5521913a-bd83-4a61-a0c6-eeb4be2af623">H+xcyq8rkdViYwumGUYABdsRSQH2IpVCshUVxbh1xaK1ASNs1PszNO9ZlpX+FveLAutxsNATk7o8
5nwaWDPhasukkbs24lEW5M7vAUt2FQFypwsdvZfeNWXPdRA2vlDnOLDmnN+LRzr4QdlfgaBOuLLg
0zxdv5uNQMsVwOmB6WyukGt0SIU9aB6SfaLV0b7cMEs8To4rxFXj8OyNuxq8prHK85wacwzLHGHg
GsRQWZN4MgP7NdipKtrIjGr5S1DAYkDRfw1lsSHxx/u0u5AQBfdZUcJHMUqUnJmzU0wK4XVX2sgl
YyMqH7uNwdB6I0JZkFj2nB69+GBOA/2o77xVew==</ds:SignatureValue>
<ds:KeyInfo>
<ds:X509Data>
<ds:X509Certificate>MIIFxDCCBKygAwIBAgIHXuECSRHYCzANBgkqhkiG9w0BAQsFADBcMQswCQYDVQQGEwJUUjFNMEsG
A1UEAwxETWFsaSBNw7xow7xyIEVsZWt0cm9uaWsgU2VydGlmaWthIEhpem1ldCBTYcSfbGF5xLFj
xLFzxLEgLSBTw7xyw7xtIDIwHhcNMjEwODAyMTIzMTQxWhcNMjQwODAxMTIzMTQxWjBsMRMwEQYD
VQQFEwo2MzEwNjk0ODA3MVUwUwYDVQQDDExORVMgQsSwTEfEsCBWRVLEsCBURUtOT0xPSsSwTEVS
xLAgVkUgU0FLTEFNQSBIxLBaTUVUTEVSxLAgQU5PTsSwTSDFnsSwUktFVMSwMIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuzInvhywUIQx87+DL/9vlx59akFVXTdvmqDBBMMdqhht1MNf
y928wBLnmu5Ia871zMftgxk00Umk3/d394U0vCmpARhlpP//OoLLkz0jeBh0zA15zFnyl/bX8mo/
1fhQE+Zz+VZrq5yJxh+pdwr3rtYWHjJVJubGwR7G9jYpTLBEDJNNf0Tpbpg+f18wY7UJaNXu6gza
k7iRLPd5L84j/yKuKB7i+sfL3oY+Lz6yOJd0luQBPp3gHvhvIrmcrA4xxxWPVc9DssJ13VF3PSAv
rReD0dhFa2geWeAGGONcPQKX/JQbaODtSgruU0d0EnOhPEvMVw66U2U7OuhfC9zwqwIDAQABo4IC
eTCCAnUwHwYDVR0jBBgwFoAUA4T6lzHn9IcZL2Ur4bQbY6evdb4wHQYDVR0OBBYEFJt8fG2M5aL7
FQc/cIdZutJ9PcyzMA4GA1UdDwEB/wQEAwIHgDCCATMGA1UdIASCASowggEmMIIBIgYLYIYYAQIB
AQUHBAEwggERMCoGCCsGAQUFBwIBFh5odHRwOi8vZGVwby5rYW11c20uZ292LnRyL2lsa2UwgeIG
CCsGAQUFBwICMIHVHoHSAEIAdQAgAHMAZQByAHQAaQBmAGkAawBhACAAaQBsAGUAIABpAGwAZwBp
AGwAaQAgAHMAZQByAHQAaQBmAGkAawBhACAAdQB5AGcAdQBsAGEAbQBhACAAZQBzAGEAcwBsAGEA
cgExAG4BMQAgAG8AawB1AG0AYQBrACAAaQDnAGkAbgAgAGIAZQBsAGkAcgB0AGkAbABlAG4AIAB3
AGUAYgAgAHMAaQB0AGUAcwBpAG4AaQAgAHoAaQB5AGEAcgBlAHQAIABlAGQAaQBuAGkAegAuMAwG
A1UdEwEB/wQCMAAwFgYDVR0lBA8wDQYLYIYYAQIBAQUHMgEwQQYDVR0fBDowODA2oDSgMoYwaHR0
cDovL2RlcG8ua2FtdXNtLmdvdi50ci9rdXJ1bXNhbC9tbWVzaHMtczIuY3JsMIGCBggrBgEFBQcB
AQR2MHQwPAYIKwYBBQUHMAKGMGh0dHA6Ly9kZXBvLmthbXVzbS5nb3YudHIva3VydW1zYWwvbW1l
c2hzLXMyLmNydDA0BggrBgEFBQcwAYYoaHR0cDovL2Npc2R1cG1tczIua3VydW1zYWwua2FtdXNt
Lmdvdi50cjANBgkqhkiG9w0BAQsFAAOCAQEABZYyojXOXaWe1XPuP3HarbMDOa9kLVQUXLOjNaWn
sT7GeJMO0EPJJku4VASF3eEnGYcxcIKQp8FwWGBU3MPWEHZyNt/gqiQhNDMipDa5EOEnJjWgEbVK
Olbf6FtBwJtHGpqqIqPGtBHRQCCe/g+vSrnysaYApgkRp/YRnB1VXbtB4aAAdlSS0WVZCf0pMIAE
P1wLm9nsO3kMnCDpeu8SdrdyU0shYeXgmeD5mN4XGE99Ay5+aqc5FuMpVllI2fahW88AlgnuVArB
qyorOfGS48MlRWrRwDznv60bn89Qar0OBejlsV4W/oLkO7fcDXW5BVlqz1R5TIB1TwF3jqEAiA==</ds:X509Certificate>
<ds:X509SubjectName>CN=NES BİLGİ VERİ TEKNOLOJİLERİ VE SAKLAMA HİZMETLERİ ANONİM ŞİRKETİ,SERIALNUMBER=6310694807</ds:X509SubjectName>
</ds:X509Data>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>ALsyJ74csFCEMfO/gy//b5cefWpBVV03b5qgwQTDHaoYbdTDX8vdvMAS55ruSGvO9czH7YMZNNFJ
pN/3d/eFNLwpqQEYZaT//zqCy5M9I3gYdMwNecxZ8pf21/JqP9X4UBPmc/lWa6ucicYfqXcK967W
Fh4yVSbmxsEexvY2KUywRAyTTX9E6W6YPn9fMGO1CWjV7uoM2pO4kSz3eS/OI/8irige4vrHy96G
Pi8+sjiXdJbkAT6d4B74byK5nKwOMccVj1XPQ7LCdd1Rdz0gL60Xg9HYRWtoHlngBhjjXD0Cl/yU
G2jg7UoK7lNHdBJzoTxLzFcOulNlOzroXwvc8Ks=</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
</ds:KeyInfo>
<ds:Object Id="Object-Id-e7ef9ec8-a8b0-4002-bfe2-8ca62a9c4f35"><xades:QualifyingProperties Target="Signature_IN32023000170737">
<xades:SignedProperties Id="Signed-Properties-Id-af7e1682-b3d3-4974-a3b8-b26ee6f3cefb">
<xades:SignedSignatureProperties>
<xades:SigningTime>2023-10-23T11:25:14.564+03:00</xades:SigningTime>
<xades:SigningCertificate>
<xades:Cert>
<xades:CertDigest>
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
<ds:DigestValue>VcktZ2X1Z/ed1OUYU+aq3aCI2TKt1fvBRwvVjKv4gCk=</ds:DigestValue>
</xades:CertDigest>
<xades:IssuerSerial>
<ds:X509IssuerName>CN=Mali Mühür Elektronik Sertifika Hizmet Sağlayıcısı - Sürüm 2,C=TR</ds:X509IssuerName>
<ds:X509SerialNumber>26706047742892043</ds:X509SerialNumber>
</xades:IssuerSerial>
</xades:Cert>
</xades:SigningCertificate>
<xades:SignerRole>
<xades:ClaimedRoles>
<xades:ClaimedRole>Supplier</xades:ClaimedRole>
</xades:ClaimedRoles>
</xades:SignerRole>
</xades:SignedSignatureProperties>
<xades:SignedDataObjectProperties>
<xades:DataObjectFormat ObjectReference="#Reference-Id-b677767b-4d37-4f05-8014-453bf2ef54ef">
<xades:MimeType>text/xml</xades:MimeType>
</xades:DataObjectFormat>
</xades:SignedDataObjectProperties>
</xades:SignedProperties>
</xades:QualifyingProperties>
</ds:Object>
</ds:Signature></ext:ExtensionContent></ext:UBLExtension></ext:UBLExtensions><cbc:UBLVersionID>2.1</cbc:UBLVersionID><cbc:CustomizationID>TR1.2</cbc:CustomizationID><cbc:ProfileID>EARSIVFATURA</cbc:ProfileID><cbc:ID>IN32023000170737</cbc:ID><cbc:CopyIndicator>false</cbc:CopyIndicator><cbc:UUID>461584D1-5A19-4E03-ABCA-C47999542A0A</cbc:UUID><cbc:IssueDate>2023-10-23</cbc:IssueDate><cbc:IssueTime>11:20:58</cbc:IssueTime><cbc:InvoiceTypeCode>SATIS</cbc:InvoiceTypeCode><cbc:Note>YALNIZ : BİNYÜZDOKUZ TL YETMİŞDÖRT Kr.</cbc:Note><cbc:Note>#TeslimatAdres#29.SOKAK BİNA NO:43 DAİRE NO:4 EMEK MAHALLESİ ÇANKAYA/ANKARA 06490</cbc:Note><cbc:Note>#TeslimatAdres1#ÇANKAYA -  ANKARA</cbc:Note><cbc:Note>#TeslimTuru#YKPÖ</cbc:Note><cbc:Note>##Takip2##IH2432400</cbc:Note><cbc:Note>#MusteriTemsilcisi#INCEHESAP</cbc:Note><cbc:Note>İşbu fatura muheviyatı mal ve faturanın ibrazından itibaren 8 gün içinde itiraz edilmediği taktirde aynen kabul edilmiş sayılır.</cbc:Note><cbc:Note>#Referans#IH17-1293038</cbc:Note><cbc:Note>İrsaliye yerine geçer.</cbc:Note><cbc:DocumentCurrencyCode>TRY</cbc:DocumentCurrencyCode><cbc:LineCountNumeric>1</cbc:LineCountNumeric><cac:OrderReference><cbc:ID>IH-2432400</cbc:ID><cbc:IssueDate>2023-10-21</cbc:IssueDate></cac:OrderReference><cac:AdditionalDocumentReference><cbc:ID>.</cbc:ID><cbc:IssueDate>2023-10-23</cbc:IssueDate><cbc:DocumentTypeCode>IS_DESPATCH</cbc:DocumentTypeCode></cac:AdditionalDocumentReference><cac:AdditionalDocumentReference><cbc:ID>ELEKTRONIK</cbc:ID><cbc:IssueDate>2023-10-23</cbc:IssueDate><cbc:DocumentTypeCode>SEND_TYPE</cbc:DocumentTypeCode></cac:AdditionalDocumentReference><cac:AdditionalDocumentReference><cbc:ID>.</cbc:ID><cbc:IssueDate>2023-10-23</cbc:IssueDate><cbc:DocumentTypeCode>IS_INTERNET</cbc:DocumentTypeCode></cac:AdditionalDocumentReference><cac:AdditionalDocumentReference><cbc:ID>http://incehesap.com</cbc:ID><cbc:IssueDate>2023-10-23</cbc:IssueDate><cbc:DocumentTypeCode>INT_WEBSITE</cbc:DocumentTypeCode></cac:AdditionalDocumentReference><cac:AdditionalDocumentReference><cbc:ID>KREDIKARTI/BANKAKARTI</cbc:ID><cbc:IssueDate>2023-10-23</cbc:IssueDate><cbc:DocumentTypeCode>INT_PAYMENT_METHOD</cbc:DocumentTypeCode></cac:AdditionalDocumentReference><cac:AdditionalDocumentReference><cbc:ID>21.10.2023</cbc:ID><cbc:IssueDate>2023-10-23</cbc:IssueDate><cbc:DocumentTypeCode>INT_PAYMENTDATE</cbc:DocumentTypeCode></cac:AdditionalDocumentReference><cac:AdditionalDocumentReference><cbc:ID>YURTİÇİ KARGO SERVİSİ A.Ş.</cbc:ID><cbc:IssueDate>2023-10-23</cbc:IssueDate><cbc:DocumentTypeCode>INT_TRANSPORTER</cbc:DocumentTypeCode></cac:AdditionalDocumentReference><cac:AdditionalDocumentReference><cbc:ID>9860008925</cbc:ID><cbc:IssueDate>2023-10-23</cbc:IssueDate><cbc:DocumentTypeCode>INT_TRANSPORTER_REGISTER_NUMBER</cbc:DocumentTypeCode></cac:AdditionalDocumentReference><cac:AdditionalDocumentReference><cbc:ID>21.10.2023</cbc:ID><cbc:IssueDate>2023-10-23</cbc:IssueDate><cbc:DocumentTypeCode>INT_TRANSPORT_DATE</cbc:DocumentTypeCode></cac:AdditionalDocumentReference><cac:AdditionalDocumentReference><cbc:ID>IN3</cbc:ID><cbc:IssueDate>2023-10-23</cbc:IssueDate><cac:Attachment><cbc:EmbeddedDocumentBinaryObject characterSetCode="UTF-8" encodingCode="Base64" filename="IN3.xslt" mimeCode="application/xml"></cbc:EmbeddedDocumentBinaryObject></cac:Attachment></cac:AdditionalDocumentReference><cac:Signature><cbc:ID schemeID="VKN_TCKN">6310694807</cbc:ID><cac:SignatoryParty><cbc:WebsiteURI>http://www.nesbilgi.com.tr</cbc:WebsiteURI><cac:PartyIdentification><cbc:ID schemeID="VKN">6310694807</cbc:ID></cac:PartyIdentification><cac:PartyName><cbc:Name>NES BİLGİ VERİ TEKNOLOJİLERİ VE SAKLAMA HİZMETLERİ A.Ş.</cbc:Name></cac:PartyName><cac:PostalAddress><cbc:StreetName>FSM Mahallesi Poligon Caddesi</cbc:StreetName><cbc:BuildingName>Buyaka2 Sitesi Kule-1 Kat:15 İç Kapı No:58-61</cbc:BuildingName><cbc:BuildingNumber>8A</cbc:BuildingNumber><cbc:CitySubdivisionName>ÜMRANİYE</cbc:CitySubdivisionName><cbc:CityName>İstanbul</cbc:CityName><cbc:PostalZone>34771</cbc:PostalZone><cac:Country><cbc:IdentificationCode>TR</cbc:IdentificationCode><cbc:Name>Türkiye</cbc:Name></cac:Country></cac:PostalAddress><cac:PartyTaxScheme><cac:TaxScheme><cbc:Name>ALEMDAĞ</cbc:Name></cac:TaxScheme></cac:PartyTaxScheme></cac:SignatoryParty><cac:DigitalSignatureAttachment><cac:ExternalReference><cbc:URI>#Signature_IN32023000170737</cbc:URI></cac:ExternalReference></cac:DigitalSignatureAttachment></cac:Signature><cac:AccountingSupplierParty><cac:Party><cac:PartyIdentification><cbc:ID schemeID="VKN">4770205475</cbc:ID></cac:PartyIdentification><cac:PartyIdentification><cbc:ID schemeID="MERSISNO">0477020547500001</cbc:ID></cac:PartyIdentification><cac:PartyIdentification><cbc:ID schemeID="TICARETSICILNO">761199</cbc:ID></cac:PartyIdentification><cac:PartyName><cbc:Name>İNCEHESAP SANAL MAĞAZACILIK TİCARET ANONİM ŞİRKETİ</cbc:Name></cac:PartyName><cac:PostalAddress><cbc:StreetName>TAŞDELEN MAHALLESİ ATABEY CADDESİ NO:9 ÇEKMEKÖY / İSTANBUL</cbc:StreetName><cbc:CitySubdivisionName>ÇEKMEKÖY</cbc:CitySubdivisionName><cbc:CityName>İSTANBUL</cbc:CityName><cac:Country><cbc:Name>TÜRKİYE</cbc:Name></cac:Country></cac:PostalAddress><cac:PartyTaxScheme><cac:TaxScheme><cbc:Name>SARIGAZİ</cbc:Name></cac:TaxScheme></cac:PartyTaxScheme><cac:Contact><cbc:Telephone>0850 800 4623</cbc:Telephone><cbc:ElectronicMail>mh@incehesap.com</cbc:ElectronicMail></cac:Contact></cac:Party></cac:AccountingSupplierParty><cac:AccountingCustomerParty><cac:Party><cac:PartyIdentification><cbc:ID schemeID="TCKN">12598024214</cbc:ID></cac:PartyIdentification><cac:PostalAddress><cbc:StreetName>29.SOKAK BİNA NO:43 DAİRE NO:4 EMEK MAHALLESİ ÇANKAYA/ANKARA</cbc:StreetName><cbc:CitySubdivisionName>ÇANKAYA</cbc:CitySubdivisionName><cbc:CityName>ANKARA</cbc:CityName><cbc:PostalZone>06490</cbc:PostalZone><cac:Country><cbc:Name>TÜRKIYE</cbc:Name></cac:Country></cac:PostalAddress><cac:PartyTaxScheme><cac:TaxScheme><cbc:Name>TC KİMLİK NO</cbc:Name></cac:TaxScheme></cac:PartyTaxScheme><cac:Contact><cbc:Telephone>5454553516</cbc:Telephone><cbc:ElectronicMail>eaurouge94@gmail.com</cbc:ElectronicMail></cac:Contact><cac:Person><cbc:FirstName>ARDA KIRBAYIR </cbc:FirstName><cbc:FamilyName>.</cbc:FamilyName></cac:Person></cac:Party></cac:AccountingCustomerParty><cac:TaxTotal><cbc:TaxAmount currencyID="TRY">184.96</cbc:TaxAmount><cac:TaxSubtotal><cbc:TaxableAmount currencyID="TRY">924.78</cbc:TaxableAmount><cbc:TaxAmount currencyID="TRY">184.96</cbc:TaxAmount><cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric><cbc:Percent>20</cbc:Percent><cac:TaxCategory><cac:TaxScheme><cbc:Name>KDV</cbc:Name><cbc:TaxTypeCode>0015</cbc:TaxTypeCode></cac:TaxScheme></cac:TaxCategory></cac:TaxSubtotal></cac:TaxTotal><cac:LegalMonetaryTotal><cbc:LineExtensionAmount currencyID="TRY">924.78</cbc:LineExtensionAmount><cbc:TaxExclusiveAmount currencyID="TRY">924.78</cbc:TaxExclusiveAmount><cbc:TaxInclusiveAmount currencyID="TRY">1109.74</cbc:TaxInclusiveAmount><cbc:AllowanceTotalAmount currencyID="TRY">0</cbc:AllowanceTotalAmount><cbc:PayableAmount currencyID="TRY">1109.74</cbc:PayableAmount></cac:LegalMonetaryTotal><cac:InvoiceLine><cbc:ID>1</cbc:ID><cbc:InvoicedQuantity unitCode="NIU">1</cbc:InvoicedQuantity><cbc:LineExtensionAmount currencyID="TRY">924.78</cbc:LineExtensionAmount><cac:TaxTotal><cbc:TaxAmount currencyID="TRY">184.96</cbc:TaxAmount><cac:TaxSubtotal><cbc:TaxableAmount currencyID="TRY">924.78</cbc:TaxableAmount><cbc:TaxAmount currencyID="TRY">184.96</cbc:TaxAmount><cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric><cbc:Percent>20</cbc:Percent><cac:TaxCategory><cac:TaxScheme><cbc:Name>KDV</cbc:Name><cbc:TaxTypeCode>0015</cbc:TaxTypeCode></cac:TaxScheme></cac:TaxCategory></cac:TaxSubtotal></cac:TaxTotal><cac:Item><cbc:Name>16 GB DDR4 3600 Mhz T-FORCE VULCAN TUF YELLOW 8Gx2</cbc:Name><cac:SellersItemIdentification><cbc:ID>AB100TMG034</cbc:ID></cac:SellersItemIdentification></cac:Item><cac:Price><cbc:PriceAmount currencyID="TRY">924.775</cbc:PriceAmount></cac:Price></cac:InvoiceLine></Invoice>
